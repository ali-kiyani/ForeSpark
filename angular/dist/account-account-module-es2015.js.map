{"version":3,"sources":["./src/account/account-routing.module.ts","./src/account/account.component.ts","./src/account/account.component.html","./src/account/account.module.ts","./src/account/layout/account-footer.component.ts","./src/account/layout/account-footer.component.html","./src/account/layout/account-header.component.ts","./src/account/layout/account-header.component.html","./src/account/layout/account-languages.component.ts","./src/account/layout/account-languages.component.html","./src/account/login/login.component.ts","./src/account/login/login.component.html","./src/account/register/register.component.ts","./src/account/register/register.component.html","./src/account/tenant/tenant-change-dialog.component.ts","./src/account/tenant/tenant-change-dialog.component.html","./src/account/tenant/tenant-change.component.ts","./src/account/tenant/tenant-change.component.html","./src/shared/AppEnums.ts"],"names":[],"mappings":"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","file":"account-account-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AccountComponent } from './account.component';\n\n@NgModule({\n    imports: [\n        RouterModule.forChild([\n            {\n                path: '',\n                component: AccountComponent,\n                children: [\n                    { path: 'login', component: LoginComponent },\n                    { path: 'register', component: RegisterComponent }\n                ]\n            }\n        ])\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class AccountRoutingModule { }\n","import {\n  Component,\n  OnInit,\n  ViewEncapsulation,\n  Injector,\n  Renderer2\n} from '@angular/core';\nimport { AppComponentBase } from '@shared/app-component-base';\n\n@Component({\n  templateUrl: './account.component.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class AccountComponent extends AppComponentBase implements OnInit {\n  constructor(injector: Injector, private renderer: Renderer2) {\n    super(injector);\n  }\n\n  showTenantChange(): boolean {\n    return abp.multiTenancy.isEnabled;\n  }\n\n  ngOnInit(): void {\n    this.renderer.addClass(document.body, 'login-page');\n  }\n}\n","<div class=\"login-box\">\n  <account-header></account-header>\n  <div class=\"card\">\n    <div *ngIf=\"showTenantChange()\" class=\"card-header\">\n      <tenant-change></tenant-change>\n    </div>\n    <div class=\"card-body login-card-body\">\n      <router-outlet></router-outlet>\n    </div>\n    <div class=\"card-footer\">\n      <account-languages></account-languages>\n    </div>\n  </div>\n  <account-footer></account-footer>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientJsonpModule } from '@angular/common/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { AccountRoutingModule } from './account-routing.module';\nimport { ServiceProxyModule } from '@shared/service-proxies/service-proxy.module';\nimport { SharedModule } from '@shared/shared.module';\nimport { AccountComponent } from './account.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AccountLanguagesComponent } from './layout/account-languages.component';\nimport { AccountHeaderComponent } from './layout/account-header.component';\nimport { AccountFooterComponent } from './layout/account-footer.component';\n\n// tenants\nimport { TenantChangeComponent } from './tenant/tenant-change.component';\nimport { TenantChangeDialogComponent } from './tenant/tenant-change-dialog.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        HttpClientModule,\n        HttpClientJsonpModule,\n        SharedModule,\n        ServiceProxyModule,\n        AccountRoutingModule,\n        ModalModule.forChild()\n    ],\n    declarations: [\n        AccountComponent,\n        LoginComponent,\n        RegisterComponent,\n        AccountLanguagesComponent,\n        AccountHeaderComponent,\n        AccountFooterComponent,\n        // tenant\n        TenantChangeComponent,\n        TenantChangeDialogComponent,\n    ],\n    entryComponents: [\n        // tenant\n        TenantChangeDialogComponent\n    ]\n})\nexport class AccountModule {\n\n}\n","import { Component, Injector, ChangeDetectionStrategy } from '@angular/core';\nimport { AppComponentBase } from '@shared/app-component-base';\n\n@Component({\n  selector: 'account-footer',\n  templateUrl: './account-footer.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AccountFooterComponent extends AppComponentBase {\n  currentYear: number;\n  versionText: string;\n\n  constructor(injector: Injector) {\n    super(injector);\n\n    this.currentYear = new Date().getFullYear();\n    this.versionText =\n      this.appSession.application.version +\n      ' [' +\n      this.appSession.application.releaseDate.format('YYYYDDMM') +\n      ']';\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-12 text-center\">\n    <small>\n      Copyright &copy; {{ currentYear }}\n      <b class=\"ml-2\">{{ \"Version\" | localize }}</b>\n      {{ versionText }}\n    </small>\n  </div>\n</div>\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'account-header',\n  templateUrl: './account-header.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AccountHeaderComponent {}\n","<div class=\"login-logo\">\n  <a href=\"/\"><b>ForeSpark</b></a>\n</div>\n","import {\n  Component,\n  OnInit,\n  Injector,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { AppComponentBase } from '@shared/app-component-base';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'account-languages',\n  templateUrl: './account-languages.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AccountLanguagesComponent extends AppComponentBase\n  implements OnInit {\n  languages: abp.localization.ILanguageInfo[];\n  currentLanguage: abp.localization.ILanguageInfo;\n\n  constructor(injector: Injector) {\n    super(injector);\n  }\n\n  ngOnInit() {\n    this.languages = _.filter(\n      this.localization.languages,\n      (l) => !l.isDisabled\n    );\n    this.currentLanguage = this.localization.currentLanguage;\n  }\n\n  changeLanguage(languageName: string): void {\n    abp.utils.setCookieValue(\n      'Abp.Localization.CultureName',\n      languageName,\n      new Date(new Date().getTime() + 5 * 365 * 86400000), // 5 year\n      abp.appPath\n    );\n\n    location.reload();\n  }\n}\n","﻿<div class=\"text-center\">\n  <ng-container *ngFor=\"let language of languages\">\n    <a\n      *ngIf=\"language.name != currentLanguage.name\"\n      href=\"javascript:void(0);\"\n      (click)=\"changeLanguage(language.name)\"\n    >\n      <span\n        title=\"{{ language.displayName }}\"\n        [attr.class.current-language-icon]=\"\n          language.name != currentLanguage.name\n        \"\n      >\n        <i class=\"d-inline-block mx-1 {{ language.icon }}\"></i>\n      </span>\n    </a>\n  </ng-container>\n</div>\n","import { Component, Injector } from '@angular/core';\nimport { AbpSessionService } from 'abp-ng2-module';\nimport { AppComponentBase } from '@shared/app-component-base';\nimport { accountModuleAnimation } from '@shared/animations/routerTransition';\nimport { AppAuthService } from '@shared/auth/app-auth.service';\n\n@Component({\n  templateUrl: './login.component.html',\n  animations: [accountModuleAnimation()]\n})\nexport class LoginComponent extends AppComponentBase {\n  submitting = false;\n\n  constructor(\n    injector: Injector,\n    public authService: AppAuthService,\n    private _sessionService: AbpSessionService\n  ) {\n    super(injector);\n  }\n\n  get multiTenancySideIsTeanant(): boolean {\n    return this._sessionService.tenantId > 0;\n  }\n\n  get isSelfRegistrationAllowed(): boolean {\n    if (!this._sessionService.tenantId) {\n      return false;\n    }\n\n    return true;\n  }\n\n  login(): void {\n    this.submitting = true;\n    this.authService.authenticate(() => (this.submitting = false));\n  }\n}\n","<div [@routerTransition]>\n  <h4 class=\"text-center mb-3\">{{ \"LogIn\" | localize }}</h4>\n  <form novalidate autocomplete=\"off\" #loginForm=\"ngForm\" (ngSubmit)=\"login()\">\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"userNameOrEmailAddress\"\n          [(ngModel)]=\"authService.authenticateModel.userNameOrEmailAddress\"\n          [placeholder]=\"'UserNameOrEmail' | localize\"\n          required\n          maxlength=\"256\"\n          #userNameOrEmailAddressModel=\"ngModel\"\n          #userNameOrEmailAddressEl\n        />\n        <div class=\"input-group-append\">\n          <div class=\"input-group-text\">\n            <span class=\"fas fa-user\"></span>\n          </div>\n        </div>\n      </div>\n      <abp-validation-summary\n        [control]=\"userNameOrEmailAddressModel\"\n        [controlEl]=\"userNameOrEmailAddressEl\"\n      ></abp-validation-summary>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          name=\"password\"\n          [(ngModel)]=\"authService.authenticateModel.password\"\n          [placeholder]=\"'Password' | localize\"\n          required\n          maxlength=\"32\"\n          #passwordModel=\"ngModel\"\n          #passwordEl\n        />\n        <div class=\"input-group-append\">\n          <div class=\"input-group-text\">\n            <span class=\"fas fa-lock\"></span>\n          </div>\n        </div>\n      </div>\n      <abp-validation-summary\n        [control]=\"passwordModel\"\n        [controlEl]=\"passwordEl\"\n      ></abp-validation-summary>\n    </div>\n    <div class=\"form-group row\">\n      <div class=\"col-md-8\">\n        <div class=\"custom-control custom-checkbox\">\n          <input\n            type=\"checkbox\"\n            class=\"custom-control-input\"\n            id=\"rememberMe\"\n            name=\"rememberMe\"\n            [(ngModel)]=\"authService.rememberMe\"\n          />\n          <label for=\"rememberMe\" class=\"custom-control-label\">\n            {{ \"RememberMe\" | localize }}\n          </label>\n        </div>\n      </div>\n      <div class=\"col-md-4\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-block\"\n          [disabled]=\"!loginForm.form.valid || submitting\"\n        >\n          {{ \"LogIn\" | localize }}\n        </button>\n      </div>\n    </div>\n  </form>\n  <p *ngIf=\"isSelfRegistrationAllowed\" class=\"mb-1\">\n    <a [routerLink]=\"['../register']\">\n      <i class=\"fa fa-plus-circle\"></i> {{ \"Register\" | localize }}\n    </a>\n  </p>\n</div>\n","import { Component, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { finalize } from 'rxjs/operators';\nimport { AppComponentBase } from '@shared/app-component-base';\nimport {\n  AccountServiceProxy,\n  RegisterInput,\n  RegisterOutput\n} from '@shared/service-proxies/service-proxies';\nimport { accountModuleAnimation } from '@shared/animations/routerTransition';\nimport { AppAuthService } from '@shared/auth/app-auth.service';\n\n@Component({\n  templateUrl: './register.component.html',\n  animations: [accountModuleAnimation()]\n})\nexport class RegisterComponent extends AppComponentBase {\n  model: RegisterInput = new RegisterInput();\n  saving = false;\n\n  constructor(\n    injector: Injector,\n    private _accountService: AccountServiceProxy,\n    private _router: Router,\n    private authService: AppAuthService\n  ) {\n    super(injector);\n  }\n\n  save(): void {\n    this.saving = true;\n    this._accountService\n      .register(this.model)\n      .pipe(\n        finalize(() => {\n          this.saving = false;\n        })\n      )\n      .subscribe((result: RegisterOutput) => {\n        if (!result.canLogin) {\n          this.notify.success(this.l('SuccessfullyRegistered'));\n          this._router.navigate(['/login']);\n          return;\n        }\n\n        // Autheticate\n        this.saving = true;\n        this.authService.authenticateModel.userNameOrEmailAddress = this.model.userName;\n        this.authService.authenticateModel.password = this.model.password;\n        this.authService.authenticate(() => {\n          this.saving = false;\n        });\n      });\n  }\n}\n","<div [@routerTransition]>\n  <h4 class=\"text-center mb-3\">{{ \"Register\" | localize }}</h4>\n  <form autocomplete=\"off\" #registerForm=\"ngForm\" (ngSubmit)=\"save()\">\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input\n          type=\"number\"\n          class=\"form-control\"\n          name=\"cnic\"\n          placeholder=\"{{ 'CNIC' | localize }}\"\n          required\n          minlength=\"13\"\n          maxlength=\"13\"\n          [(ngModel)]=\"model.cnic\"\n          #cnicModel=\"ngModel\"\n          #cnicEl\n        />\n        <div class=\"input-group-append\">\n          <div class=\"input-group-text\">\n            <span class=\"fa fa-id-card\"></span>\n          </div>\n        </div>\n      </div>\n      <abp-validation-summary\n        [control]=\"nameModel\"\n        [controlEl]=\"nameEl\"\n      ></abp-validation-summary>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"name\"\n          placeholder=\"{{ 'Name' | localize }}\"\n          required\n          maxlength=\"64\"\n          [(ngModel)]=\"model.name\"\n          #nameModel=\"ngModel\"\n          #nameEl\n        />\n        <div class=\"input-group-append\">\n          <div class=\"input-group-text\">\n            <span class=\"fas fa-arrow-left\"></span>\n          </div>\n        </div>\n      </div>\n      <abp-validation-summary\n        [control]=\"nameModel\"\n        [controlEl]=\"nameEl\"\n      ></abp-validation-summary>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"surname\"\n          placeholder=\"{{ 'Surname' | localize }}\"\n          required\n          maxlength=\"64\"\n          [(ngModel)]=\"model.surname\"\n          #surnameModel=\"ngModel\"\n          #surnameEl\n        />\n        <div class=\"input-group-append\">\n          <div class=\"input-group-text\">\n            <span class=\"fas fa-arrow-left\"></span>\n          </div>\n        </div>\n      </div>\n      <abp-validation-summary\n        [control]=\"surnameModel\"\n        [controlEl]=\"surnameEl\"\n      ></abp-validation-summary>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input\n          type=\"email\"\n          class=\"form-control\"\n          name=\"emailAddress\"\n          placeholder=\"{{ 'EmailAddress' | localize }}\"\n          required\n          maxlength=\"256\"\n          pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{1,})+$\"\n          [(ngModel)]=\"model.emailAddress\"\n          #emailAddressModel=\"ngModel\"\n          #emailAddressEl\n        />\n        <div class=\"input-group-append\">\n          <div class=\"input-group-text\">\n            <span class=\"fas fa-envelope\"></span>\n          </div>\n        </div>\n      </div>\n      <abp-validation-summary\n        [control]=\"emailAddressModel\"\n        [controlEl]=\"emailAddressEl\"\n      ></abp-validation-summary>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input\n          type=\"email\"\n          class=\"form-control\"\n          name=\"userName\"\n          placeholder=\" {{ 'UserName' | localize }}\"\n          required\n          maxlength=\"32\"\n          [(ngModel)]=\"model.userName\"\n          #userNameModel=\"ngModel\"\n          #userNameEl\n        />\n        <div class=\"input-group-append\">\n          <div class=\"input-group-text\">\n            <span class=\"fas fa-user\"></span>\n          </div>\n        </div>\n      </div>\n      <abp-validation-summary\n        [control]=\"userNameModel\"\n        [controlEl]=\"userNameEl\"\n      ></abp-validation-summary>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          name=\"password\"\n          placeholder=\"{{ 'Password' | localize }}\"\n          [(ngModel)]=\"model.password\"\n          required\n          maxlength=\"32\"\n          #passwordModel=\"ngModel\"\n          #passwordEl\n        />\n        <div class=\"input-group-append\">\n          <div class=\"input-group-text\">\n            <span class=\"fas fa-lock\"></span>\n          </div>\n        </div>\n      </div>\n      <abp-validation-summary\n        [control]=\"passwordModel\"\n        [controlEl]=\"passwordEl\"\n      ></abp-validation-summary>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-8\">\n        <button\n          type=\"button\"\n          class=\"btn btn-default\"\n          [disabled]=\"saving\"\n          [routerLink]=\"['../login']\"\n        >\n          <i class=\"fa fa-arrow-circle-left\"></i> {{ \"Back\" | localize }}\n        </button>\n      </div>\n      <div class=\"col-4\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-block\"\n          [disabled]=\"!registerForm.form.valid || saving\"\n        >\n          {{ \"Register\" | localize }}\n        </button>\n      </div>\n    </div>\n  </form>\n</div>\n","import { Component, Injector } from '@angular/core';\nimport { finalize } from 'rxjs/operators';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { AppComponentBase } from '@shared/app-component-base';\nimport { AccountServiceProxy } from '@shared/service-proxies/service-proxies';\nimport { AppTenantAvailabilityState } from '@shared/AppEnums';\nimport {\n  IsTenantAvailableInput,\n  IsTenantAvailableOutput\n} from '@shared/service-proxies/service-proxies';\n\n@Component({\n  templateUrl: './tenant-change-dialog.component.html'\n})\nexport class TenantChangeDialogComponent extends AppComponentBase {\n  saving = false;\n  tenancyName = '';\n\n  constructor(\n    injector: Injector,\n    private _accountService: AccountServiceProxy,\n    public bsModalRef: BsModalRef\n  ) {\n    super(injector);\n  }\n\n  save(): void {\n    if (!this.tenancyName) {\n      abp.multiTenancy.setTenantIdCookie(undefined);\n      this.bsModalRef.hide();\n      location.reload();\n      return;\n    }\n\n    const input = new IsTenantAvailableInput();\n    input.tenancyName = this.tenancyName;\n\n    this.saving = true;\n    this._accountService\n      .isTenantAvailable(input)\n      .pipe(\n        finalize(() => {\n          this.saving = false;\n        })\n      )\n      .subscribe((result: IsTenantAvailableOutput) => {\n        switch (result.state) {\n          case AppTenantAvailabilityState.Available:\n            abp.multiTenancy.setTenantIdCookie(result.tenantId);\n            location.reload();\n            return;\n          case AppTenantAvailabilityState.InActive:\n            this.message.warn(this.l('TenantIsNotActive', this.tenancyName));\n            break;\n          case AppTenantAvailabilityState.NotFound:\n            this.message.warn(\n              this.l('ThereIsNoTenantDefinedWithName{0}', this.tenancyName)\n            );\n            break;\n        }\n      });\n  }\n}\n","<form\n  class=\"form-horizontal\"\n  autocomplete=\"off\"\n  #changeTenantForm=\"ngForm\"\n  (ngSubmit)=\"save()\"\n>\n  <abp-modal-header\n    [title]=\"'ChangeTenant' | localize\"\n    (onCloseClick)=\"bsModalRef.hide()\"\n  ></abp-modal-header>\n  <div class=\"modal-body\">\n    <div class=\"form-group row\">\n      <label class=\"col-md-3 col-form-label\" for=\"tenancyName\">\n        {{ \"TenancyName\" | localize }}\n      </label>\n      <div class=\"col-md-9\">\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"tenancyName\"\n          name=\"tenancyName\"\n          [(ngModel)]=\"tenancyName\"\n          maxlength=\"64\"\n        />\n      </div>\n    </div>\n    <span>\n      <i class=\"fa fa-info-circle\"></i>\n      {{ \"LeaveEmptyToSwitchToHost\" | localize }}\n    </span>\n  </div>\n  <abp-modal-footer\n    [cancelDisabled]=\"saving\"\n    [saveDisabled]=\"!changeTenantForm.form.valid || saving\"\n    (onCancelClick)=\"bsModalRef.hide()\"\n  ></abp-modal-footer>\n</form>\n","import { Component, OnInit, Injector } from '@angular/core';\nimport { AppComponentBase } from '@shared/app-component-base';\nimport { TenantChangeDialogComponent } from './tenant-change-dialog.component';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'tenant-change',\n  templateUrl: './tenant-change.component.html'\n})\nexport class TenantChangeComponent extends AppComponentBase implements OnInit {\n  tenancyName = '';\n  name = '';\n\n  constructor(injector: Injector, private _modalService: BsModalService) {\n    super(injector);\n  }\n\n  get isMultiTenancyEnabled(): boolean {\n    return abp.multiTenancy.isEnabled;\n  }\n\n  ngOnInit() {\n    if (this.appSession.tenant) {\n      this.tenancyName = this.appSession.tenant.tenancyName;\n      this.name = this.appSession.tenant.name;\n    }\n  }\n\n  showChangeModal(): void {\n    const modal = this._modalService.show(TenantChangeDialogComponent);\n    if (this.appSession.tenant) {\n      modal.content.tenancyName = this.appSession.tenant.tenancyName;\n    }\n  }\n}\n","<div *ngIf=\"isMultiTenancyEnabled\" class=\"text-center tenant-change-component\">\n  <span>\n    {{ \"CurrentTenant\" | localize }}:\n    <span *ngIf=\"tenancyName\" title=\"{{ name }}\">\n      <strong>{{ tenancyName }}</strong>\n    </span>\n    <span *ngIf=\"!tenancyName\">{{ \"NotSelected\" | localize }}</span>\n    (<a href=\"javascript:;\" (click)=\"showChangeModal()\">\n      {{ \"Change\" | localize }} </a\n    >)\n  </span>\n</div>\n","import { TenantAvailabilityState } from '@shared/service-proxies/service-proxies';\n\n\nexport class AppTenantAvailabilityState {\n    static Available: number = TenantAvailabilityState._1;\n    static InActive: number = TenantAvailabilityState._2;\n    static NotFound: number = TenantAvailabilityState._3;\n}\n"],"sourceRoot":"webpack:///"}