{"version":3,"sources":["webpack:///src/account/account-routing.module.ts","webpack:///src/account/account.component.ts","webpack:///src/account/account.component.html","webpack:///src/account/account.module.ts","webpack:///src/account/layout/account-footer.component.ts","webpack:///src/account/layout/account-footer.component.html","webpack:///src/account/layout/account-header.component.ts","webpack:///src/account/layout/account-header.component.html","webpack:///src/account/layout/account-languages.component.ts","webpack:///src/account/layout/account-languages.component.html","webpack:///src/account/login/login.component.ts","webpack:///src/account/login/login.component.html","webpack:///src/account/register/register.component.ts","webpack:///src/account/register/register.component.html","webpack:///src/account/tenant/tenant-change-dialog.component.ts","webpack:///src/account/tenant/tenant-change-dialog.component.html","webpack:///src/account/tenant/tenant-change.component.ts","webpack:///src/account/tenant/tenant-change.component.html","webpack:///src/shared/AppEnums.ts"],"names":["AccountRoutingModule","forChild","path","component","children","imports","exports","AccountComponent","injector","renderer","abp","multiTenancy","isEnabled","addClass","document","body","templateUrl","encapsulation","None","AccountModule","declarations","entryComponents","AccountFooterComponent","currentYear","Date","getFullYear","versionText","appSession","application","version","releaseDate","format","selector","changeDetection","OnPush","AccountHeaderComponent","AccountLanguagesComponent","languages","localization","l","isDisabled","currentLanguage","languageName","utils","setCookieValue","getTime","appPath","location","reload","LoginComponent","authService","_sessionService","submitting","authenticate","tenantId","login","animations","RegisterComponent","_accountService","_router","model","saving","register","pipe","subscribe","result","canLogin","notify","success","navigate","authenticateModel","userNameOrEmailAddress","userName","password","save","TenantChangeDialogComponent","bsModalRef","tenancyName","setTenantIdCookie","undefined","hide","input","isTenantAvailable","state","Available","InActive","message","warn","NotFound","TenantChangeComponent","_modalService","name","tenant","modal","show","content","AppTenantAvailabilityState","_1","_2","_3"],"mappings":"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","file":"account-account-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AccountComponent } from './account.component';\n\n@NgModule({\n    imports: [\n        RouterModule.forChild([\n            {\n                path: '',\n                component: AccountComponent,\n                children: [\n                    { path: 'login', component: LoginComponent },\n                    { path: 'register', component: RegisterComponent }\n                ]\n            }\n        ])\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class AccountRoutingModule { }\n","import {\n  Component,\n  OnInit,\n  ViewEncapsulation,\n  Injector,\n  Renderer2\n} from '@angular/core';\nimport { AppComponentBase } from '@shared/app-component-base';\n\n@Component({\n  templateUrl: './account.component.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class AccountComponent extends AppComponentBase implements OnInit {\n  constructor(injector: Injector, private renderer: Renderer2) {\n    super(injector);\n  }\n\n  showTenantChange(): boolean {\n    return abp.multiTenancy.isEnabled;\n  }\n\n  ngOnInit(): void {\n    this.renderer.addClass(document.body, 'login-page');\n  }\n}\n","<div class=\"login-box\">\n  <account-header></account-header>\n  <div class=\"card\">\n    <div *ngIf=\"showTenantChange()\" class=\"card-header\">\n      <tenant-change></tenant-change>\n    </div>\n    <div class=\"card-body login-card-body\">\n      <router-outlet></router-outlet>\n    </div>\n    <div class=\"card-footer\">\n      <account-languages></account-languages>\n    </div>\n  </div>\n  <account-footer></account-footer>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientJsonpModule } from '@angular/common/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { AccountRoutingModule } from './account-routing.module';\nimport { ServiceProxyModule } from '@shared/service-proxies/service-proxy.module';\nimport { SharedModule } from '@shared/shared.module';\nimport { AccountComponent } from './account.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AccountLanguagesComponent } from './layout/account-languages.component';\nimport { AccountHeaderComponent } from './layout/account-header.component';\nimport { AccountFooterComponent } from './layout/account-footer.component';\n\n// tenants\nimport { TenantChangeComponent } from './tenant/tenant-change.component';\nimport { TenantChangeDialogComponent } from './tenant/tenant-change-dialog.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        HttpClientModule,\n        HttpClientJsonpModule,\n        SharedModule,\n        ServiceProxyModule,\n        AccountRoutingModule,\n        ModalModule.forChild()\n    ],\n    declarations: [\n        AccountComponent,\n        LoginComponent,\n        RegisterComponent,\n        AccountLanguagesComponent,\n        AccountHeaderComponent,\n        AccountFooterComponent,\n        // tenant\n        TenantChangeComponent,\n        TenantChangeDialogComponent,\n    ],\n    entryComponents: [\n        // tenant\n        TenantChangeDialogComponent\n    ]\n})\nexport class AccountModule {\n\n}\n","import { Component, Injector, ChangeDetectionStrategy } from '@angular/core';\nimport { AppComponentBase } from '@shared/app-component-base';\n\n@Component({\n  selector: 'account-footer',\n  templateUrl: './account-footer.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AccountFooterComponent extends AppComponentBase {\n  currentYear: number;\n  versionText: string;\n\n  constructor(injector: Injector) {\n    super(injector);\n\n    this.currentYear = new Date().getFullYear();\n    this.versionText =\n      this.appSession.application.version +\n      ' [' +\n      this.appSession.application.releaseDate.format('YYYYDDMM') +\n      ']';\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-12 text-center\">\n    <small>\n      Copyright &copy; {{ currentYear }}\n      <b class=\"ml-2\">{{ \"Version\" | localize }}</b>\n      {{ versionText }}\n    </small>\n  </div>\n</div>\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'account-header',\n  templateUrl: './account-header.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AccountHeaderComponent {}\n","<div class=\"login-logo\">\n  <a href=\"/\"><b>ForeSpark</b></a>\n</div>\n","import {\n  Component,\n  OnInit,\n  Injector,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { AppComponentBase } from '@shared/app-component-base';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'account-languages',\n  templateUrl: './account-languages.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AccountLanguagesComponent extends AppComponentBase\n  implements OnInit {\n  languages: abp.localization.ILanguageInfo[];\n  currentLanguage: abp.localization.ILanguageInfo;\n\n  constructor(injector: Injector) {\n    super(injector);\n  }\n\n  ngOnInit() {\n    this.languages = _.filter(\n      this.localization.languages,\n      (l) => !l.isDisabled\n    );\n    this.currentLanguage = this.localization.currentLanguage;\n  }\n\n  changeLanguage(languageName: string): void {\n    abp.utils.setCookieValue(\n      'Abp.Localization.CultureName',\n      languageName,\n      new Date(new Date().getTime() + 5 * 365 * 86400000), // 5 year\n      abp.appPath\n    );\n\n    location.reload();\n  }\n}\n","﻿<div class=\"text-center\">\n  <ng-container *ngFor=\"let language of languages\">\n    <a\n      *ngIf=\"language.name != currentLanguage.name\"\n      href=\"javascript:void(0);\"\n      (click)=\"changeLanguage(language.name)\"\n    >\n      <span\n        title=\"{{ language.displayName }}\"\n        [attr.class.current-language-icon]=\"\n          language.name != currentLanguage.name\n        \"\n      >\n        <i class=\"d-inline-block mx-1 {{ language.icon }}\"></i>\n      </span>\n    </a>\n  </ng-container>\n</div>\n","import { Component, Injector } from '@angular/core';\nimport { AbpSessionService } from 'abp-ng2-module';\nimport { AppComponentBase } from '@shared/app-component-base';\nimport { accountModuleAnimation } from '@shared/animations/routerTransition';\nimport { AppAuthService } from '@shared/auth/app-auth.service';\n\n@Component({\n  templateUrl: './login.component.html',\n  animations: [accountModuleAnimation()]\n})\nexport class LoginComponent extends AppComponentBase {\n  submitting = false;\n\n  constructor(\n    injector: Injector,\n    public authService: AppAuthService,\n    private _sessionService: AbpSessionService\n  ) {\n    super(injector);\n  }\n\n  get multiTenancySideIsTeanant(): boolean {\n    return this._sessionService.tenantId > 0;\n  }\n\n  get isSelfRegistrationAllowed(): boolean {\n    if (!this._sessionService.tenantId) {\n      return false;\n    }\n\n    return true;\n  }\n\n  login(): void {\n    this.submitting = true;\n    this.authService.authenticate(() => (this.submitting = false));\n  }\n}\n","<div [@routerTransition]>\n  <h4 class=\"text-center mb-3\">{{ \"LogIn\" | localize }}</h4>\n  <form novalidate autocomplete=\"off\" #loginForm=\"ngForm\" (ngSubmit)=\"login()\">\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"userNameOrEmailAddress\"\n          [(ngModel)]=\"authService.authenticateModel.userNameOrEmailAddress\"\n          [placeholder]=\"'UserNameOrEmail' | localize\"\n          required\n          maxlength=\"256\"\n          #userNameOrEmailAddressModel=\"ngModel\"\n          #userNameOrEmailAddressEl\n        />\n        <div class=\"input-group-append\">\n          <div class=\"input-group-text\">\n            <span class=\"fas fa-user\"></span>\n          </div>\n        </div>\n      </div>\n      <abp-validation-summary\n        [control]=\"userNameOrEmailAddressModel\"\n        [controlEl]=\"userNameOrEmailAddressEl\"\n      ></abp-validation-summary>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          name=\"password\"\n          [(ngModel)]=\"authService.authenticateModel.password\"\n          [placeholder]=\"'Password' | localize\"\n          required\n          maxlength=\"32\"\n          #passwordModel=\"ngModel\"\n          #passwordEl\n        />\n        <div class=\"input-group-append\">\n          <div class=\"input-group-text\">\n            <span class=\"fas fa-lock\"></span>\n          </div>\n        </div>\n      </div>\n      <abp-validation-summary\n        [control]=\"passwordModel\"\n        [controlEl]=\"passwordEl\"\n      ></abp-validation-summary>\n    </div>\n    <div class=\"form-group row\">\n      <div class=\"col-md-8\">\n        <div class=\"custom-control custom-checkbox\">\n          <input\n            type=\"checkbox\"\n            class=\"custom-control-input\"\n            id=\"rememberMe\"\n            name=\"rememberMe\"\n            [(ngModel)]=\"authService.rememberMe\"\n          />\n          <label for=\"rememberMe\" class=\"custom-control-label\">\n            {{ \"RememberMe\" | localize }}\n          </label>\n        </div>\n      </div>\n      <div class=\"col-md-4\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-block\"\n          [disabled]=\"!loginForm.form.valid || submitting\"\n        >\n          {{ \"LogIn\" | localize }}\n        </button>\n      </div>\n    </div>\n  </form>\n  <p *ngIf=\"isSelfRegistrationAllowed\" class=\"mb-1\">\n    <a [routerLink]=\"['../register']\">\n      <i class=\"fa fa-plus-circle\"></i> {{ \"Register\" | localize }}\n    </a>\n  </p>\n</div>\n","import { Component, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { finalize } from 'rxjs/operators';\nimport { AppComponentBase } from '@shared/app-component-base';\nimport {\n  AccountServiceProxy,\n  RegisterInput,\n  RegisterOutput\n} from '@shared/service-proxies/service-proxies';\nimport { accountModuleAnimation } from '@shared/animations/routerTransition';\nimport { AppAuthService } from '@shared/auth/app-auth.service';\n\n@Component({\n  templateUrl: './register.component.html',\n  animations: [accountModuleAnimation()]\n})\nexport class RegisterComponent extends AppComponentBase {\n  model: RegisterInput = new RegisterInput();\n  saving = false;\n\n  constructor(\n    injector: Injector,\n    private _accountService: AccountServiceProxy,\n    private _router: Router,\n    private authService: AppAuthService\n  ) {\n    super(injector);\n  }\n\n  save(): void {\n    this.saving = true;\n    this._accountService\n      .register(this.model)\n      .pipe(\n        finalize(() => {\n          this.saving = false;\n        })\n      )\n      .subscribe((result: RegisterOutput) => {\n        if (!result.canLogin) {\n          this.notify.success(this.l('SuccessfullyRegistered'));\n          this._router.navigate(['/login']);\n          return;\n        }\n\n        // Autheticate\n        this.saving = true;\n        this.authService.authenticateModel.userNameOrEmailAddress = this.model.userName;\n        this.authService.authenticateModel.password = this.model.password;\n        this.authService.authenticate(() => {\n          this.saving = false;\n        });\n      });\n  }\n}\n","<div [@routerTransition]>\n  <h4 class=\"text-center mb-3\">{{ \"Register\" | localize }}</h4>\n  <form autocomplete=\"off\" #registerForm=\"ngForm\" (ngSubmit)=\"save()\">\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input\n          type=\"number\"\n          class=\"form-control\"\n          name=\"cnic\"\n          placeholder=\"{{ 'CNIC' | localize }}\"\n          required\n          minlength=\"13\"\n          maxlength=\"13\"\n          [(ngModel)]=\"model.cnic\"\n          #cnicModel=\"ngModel\"\n          #cnicEl\n        />\n        <div class=\"input-group-append\">\n          <div class=\"input-group-text\">\n            <span class=\"fa fa-id-card\"></span>\n          </div>\n        </div>\n      </div>\n      <abp-validation-summary\n        [control]=\"nameModel\"\n        [controlEl]=\"nameEl\"\n      ></abp-validation-summary>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"name\"\n          placeholder=\"{{ 'Name' | localize }}\"\n          required\n          maxlength=\"64\"\n          [(ngModel)]=\"model.name\"\n          #nameModel=\"ngModel\"\n          #nameEl\n        />\n        <div class=\"input-group-append\">\n          <div class=\"input-group-text\">\n            <span class=\"fas fa-arrow-left\"></span>\n          </div>\n        </div>\n      </div>\n      <abp-validation-summary\n        [control]=\"nameModel\"\n        [controlEl]=\"nameEl\"\n      ></abp-validation-summary>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"surname\"\n          placeholder=\"{{ 'Surname' | localize }}\"\n          required\n          maxlength=\"64\"\n          [(ngModel)]=\"model.surname\"\n          #surnameModel=\"ngModel\"\n          #surnameEl\n        />\n        <div class=\"input-group-append\">\n          <div class=\"input-group-text\">\n            <span class=\"fas fa-arrow-left\"></span>\n          </div>\n        </div>\n      </div>\n      <abp-validation-summary\n        [control]=\"surnameModel\"\n        [controlEl]=\"surnameEl\"\n      ></abp-validation-summary>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input\n          type=\"email\"\n          class=\"form-control\"\n          name=\"emailAddress\"\n          placeholder=\"{{ 'EmailAddress' | localize }}\"\n          required\n          maxlength=\"256\"\n          pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{1,})+$\"\n          [(ngModel)]=\"model.emailAddress\"\n          #emailAddressModel=\"ngModel\"\n          #emailAddressEl\n        />\n        <div class=\"input-group-append\">\n          <div class=\"input-group-text\">\n            <span class=\"fas fa-envelope\"></span>\n          </div>\n        </div>\n      </div>\n      <abp-validation-summary\n        [control]=\"emailAddressModel\"\n        [controlEl]=\"emailAddressEl\"\n      ></abp-validation-summary>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input\n          type=\"email\"\n          class=\"form-control\"\n          name=\"userName\"\n          placeholder=\" {{ 'UserName' | localize }}\"\n          required\n          maxlength=\"32\"\n          [(ngModel)]=\"model.userName\"\n          #userNameModel=\"ngModel\"\n          #userNameEl\n        />\n        <div class=\"input-group-append\">\n          <div class=\"input-group-text\">\n            <span class=\"fas fa-user\"></span>\n          </div>\n        </div>\n      </div>\n      <abp-validation-summary\n        [control]=\"userNameModel\"\n        [controlEl]=\"userNameEl\"\n      ></abp-validation-summary>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          name=\"password\"\n          placeholder=\"{{ 'Password' | localize }}\"\n          [(ngModel)]=\"model.password\"\n          required\n          maxlength=\"32\"\n          #passwordModel=\"ngModel\"\n          #passwordEl\n        />\n        <div class=\"input-group-append\">\n          <div class=\"input-group-text\">\n            <span class=\"fas fa-lock\"></span>\n          </div>\n        </div>\n      </div>\n      <abp-validation-summary\n        [control]=\"passwordModel\"\n        [controlEl]=\"passwordEl\"\n      ></abp-validation-summary>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-8\">\n        <button\n          type=\"button\"\n          class=\"btn btn-default\"\n          [disabled]=\"saving\"\n          [routerLink]=\"['../login']\"\n        >\n          <i class=\"fa fa-arrow-circle-left\"></i> {{ \"Back\" | localize }}\n        </button>\n      </div>\n      <div class=\"col-4\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-block\"\n          [disabled]=\"!registerForm.form.valid || saving\"\n        >\n          {{ \"Register\" | localize }}\n        </button>\n      </div>\n    </div>\n  </form>\n</div>\n","import { Component, Injector } from '@angular/core';\nimport { finalize } from 'rxjs/operators';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { AppComponentBase } from '@shared/app-component-base';\nimport { AccountServiceProxy } from '@shared/service-proxies/service-proxies';\nimport { AppTenantAvailabilityState } from '@shared/AppEnums';\nimport {\n  IsTenantAvailableInput,\n  IsTenantAvailableOutput\n} from '@shared/service-proxies/service-proxies';\n\n@Component({\n  templateUrl: './tenant-change-dialog.component.html'\n})\nexport class TenantChangeDialogComponent extends AppComponentBase {\n  saving = false;\n  tenancyName = '';\n\n  constructor(\n    injector: Injector,\n    private _accountService: AccountServiceProxy,\n    public bsModalRef: BsModalRef\n  ) {\n    super(injector);\n  }\n\n  save(): void {\n    if (!this.tenancyName) {\n      abp.multiTenancy.setTenantIdCookie(undefined);\n      this.bsModalRef.hide();\n      location.reload();\n      return;\n    }\n\n    const input = new IsTenantAvailableInput();\n    input.tenancyName = this.tenancyName;\n\n    this.saving = true;\n    this._accountService\n      .isTenantAvailable(input)\n      .pipe(\n        finalize(() => {\n          this.saving = false;\n        })\n      )\n      .subscribe((result: IsTenantAvailableOutput) => {\n        switch (result.state) {\n          case AppTenantAvailabilityState.Available:\n            abp.multiTenancy.setTenantIdCookie(result.tenantId);\n            location.reload();\n            return;\n          case AppTenantAvailabilityState.InActive:\n            this.message.warn(this.l('TenantIsNotActive', this.tenancyName));\n            break;\n          case AppTenantAvailabilityState.NotFound:\n            this.message.warn(\n              this.l('ThereIsNoTenantDefinedWithName{0}', this.tenancyName)\n            );\n            break;\n        }\n      });\n  }\n}\n","<form\n  class=\"form-horizontal\"\n  autocomplete=\"off\"\n  #changeTenantForm=\"ngForm\"\n  (ngSubmit)=\"save()\"\n>\n  <abp-modal-header\n    [title]=\"'ChangeTenant' | localize\"\n    (onCloseClick)=\"bsModalRef.hide()\"\n  ></abp-modal-header>\n  <div class=\"modal-body\">\n    <div class=\"form-group row\">\n      <label class=\"col-md-3 col-form-label\" for=\"tenancyName\">\n        {{ \"TenancyName\" | localize }}\n      </label>\n      <div class=\"col-md-9\">\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"tenancyName\"\n          name=\"tenancyName\"\n          [(ngModel)]=\"tenancyName\"\n          maxlength=\"64\"\n        />\n      </div>\n    </div>\n    <span>\n      <i class=\"fa fa-info-circle\"></i>\n      {{ \"LeaveEmptyToSwitchToHost\" | localize }}\n    </span>\n  </div>\n  <abp-modal-footer\n    [cancelDisabled]=\"saving\"\n    [saveDisabled]=\"!changeTenantForm.form.valid || saving\"\n    (onCancelClick)=\"bsModalRef.hide()\"\n  ></abp-modal-footer>\n</form>\n","import { Component, OnInit, Injector } from '@angular/core';\nimport { AppComponentBase } from '@shared/app-component-base';\nimport { TenantChangeDialogComponent } from './tenant-change-dialog.component';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'tenant-change',\n  templateUrl: './tenant-change.component.html'\n})\nexport class TenantChangeComponent extends AppComponentBase implements OnInit {\n  tenancyName = '';\n  name = '';\n\n  constructor(injector: Injector, private _modalService: BsModalService) {\n    super(injector);\n  }\n\n  get isMultiTenancyEnabled(): boolean {\n    return abp.multiTenancy.isEnabled;\n  }\n\n  ngOnInit() {\n    if (this.appSession.tenant) {\n      this.tenancyName = this.appSession.tenant.tenancyName;\n      this.name = this.appSession.tenant.name;\n    }\n  }\n\n  showChangeModal(): void {\n    const modal = this._modalService.show(TenantChangeDialogComponent);\n    if (this.appSession.tenant) {\n      modal.content.tenancyName = this.appSession.tenant.tenancyName;\n    }\n  }\n}\n","<div *ngIf=\"isMultiTenancyEnabled\" class=\"text-center tenant-change-component\">\n  <span>\n    {{ \"CurrentTenant\" | localize }}:\n    <span *ngIf=\"tenancyName\" title=\"{{ name }}\">\n      <strong>{{ tenancyName }}</strong>\n    </span>\n    <span *ngIf=\"!tenancyName\">{{ \"NotSelected\" | localize }}</span>\n    (<a href=\"javascript:;\" (click)=\"showChangeModal()\">\n      {{ \"Change\" | localize }} </a\n    >)\n  </span>\n</div>\n","import { TenantAvailabilityState } from '@shared/service-proxies/service-proxies';\n\n\nexport class AppTenantAvailabilityState {\n    static Available: number = TenantAvailabilityState._1;\n    static InActive: number = TenantAvailabilityState._2;\n    static NotFound: number = TenantAvailabilityState._3;\n}\n"]}